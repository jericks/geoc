geoc-vector-buffer = geoc vector randompoints -n 10 -g "1,1,10,10" | geoc vector buffer -d 10
geoc-vector-randompoints = geoc vector randompoints -n 10 -g "1,1,10,10"
geoc-vector-count = geoc vector count -i states.shp
geoc-list = geoc list
geoc-vector-count-featuresinfeature = geoc vector grid -g "0,0,10,10" -x 10 -y 10 -o grid.shp\n\n\
geoc vector randompoints -g "0 0 10 10" -n 100 -o points.shp\n\n\
geoc vector count featuresinfeature -i grid.shp -k points.shp -o grid_count.shp
geoc-geometry-greatcirclearc = geoc geometry greatcirclearc -p "POINT (-122 48)" -t "POINT (-77 39)"
geoc-proj-wkt = geoc proj wkt -e EPSG:4326
geoc-proj-envelope = geoc proj envelope -e EPSG:2927
geoc-style-css2sld = geoc style css2sld -i states.css -o states.sld
geoc-geometry-convert = geoc geometry convert -i "POINT (-122 48)" -f geojson
geoc-geometry-dd2pt = geoc geometry dd2pt -d "122d 19m 59.0016s W, 47d 36m 34.9992s N"
geoc-geometry-orthodromicdistance = geoc geometry orthodromicdistance -e wgs84 -p "-86.67 36.12" -t "-118.40 33.94"
geoc-geometry-plot = geoc geometry plot -d -i "POLYGON ((80 80, 80 120, 120 120, 120 80, 80 80))"
geoc-geometry-pt2dd = geoc geometry pt2dd -p "POINT (-122.5256194 47.212022222)" -t dms
geoc-vector-datastorelist = geoc vector datastorelist
geoc-vector-datastoreparams = geoc vector datastoreparams -n PostGIS
geoc-vector-list-layers = geoc vector list layers -i "dbtype=postgis database=naturalearth host=localhost port=5432 user=uzer password=s3cr3t"
geoc-vector-envelope = geoc vector envelope -i states.shp -o states_envelope.shp
geoc-vector-envelopes = geoc vector envelopes -i states.shp -o state_envelopes.shp
geoc-vector-centroid = geoc vector centroid -i states.shp -o state_centroids.shp
geoc-vector-convexhull = geoc vector convexhull -i states.shp -o state_convexhull.shp
geoc-vector-convexhulls = geoc vector convexhulls -i states.shp -o state_convexhulls.shp
geoc-vector-interiorpoint = geoc vector interiorpoint -i states.shp -o state_interiorpoints.shp
geoc-vector-mincircle = geoc vector mincircle -i states.shp -o state_mincircle.shp
geoc-vector-mincircles = geoc vector mincircles -i states.shp -o state_mincircles.shp
geoc-vector-minrect = geoc vector minrect -i states.shp -o state_minrect.shp
geoc-vector-minrects = geoc vector minrects -i states.shp -o state_minrects.shp
geoc-vector-octagonalenvelope = geoc vector octagonalenvelope -i states.shp -o state_octagonalenvelope.shp
geoc-vector-octagonalenvelopes = geoc vector octagonalenvelopes -i states.shp -o state_octagonalenvelopes.shp
geoc-vector-draw = geoc vector draw -i states.shp -f image.png -w 600 -h 400 && open image.png
geoc-vector-voronoi = geoc vector voronoi -i states.shp -o states_voronoi.shp
geoc-vector-delaunay = geoc vector delaunay -i states.shp -o states_delaunay.shp
geoc-vector-geomw = geoc vector geomw -i states.shp | geom combine | geom draw && open image.png
geoc-vector-geomr = echo "POINT (1 1)" | geom buffer -d 100 | geom random -n 100 | geom dump | geoc vector geomr
geoc-vector-coordinates = geoc vector coordinates -i states.shp -o states_coordinates.shp
geoc-vector-simplify = geoc vector simplify -i states.shp -o states_simplified.shp -a DouglasPeucker -d 100
geoc-vector-densify = geoc vector densify -i states.shp -o states_densified -d 10
geoc-vector-filter = geoc vector filter -i states.shp -f "STATE_POP > 1000000" -o states_largepop.shp
geoc-vector-delete = geoc vector delete -i states.shp -f "STATE_NAME = 'Washington'" -i states_no_wash.shp
geoc-vector-schema = geoc vector schema -i states.shp -p
geoc-vector-updatefield = geoc vector updatefield -i states_xy.shp -f INCLUDE -s -v "return f.geom.centroid.x" -d x
geoc-vector-project = geoc vector project -i states.shp -o states_2927.shp -t "EPSG:2927"
geoc-vector-copy = geoc vector copy -i states.shp -o states.gpkg -r states
geoc-vector-randompoints = geoc vector randompoints -n 10 -g "0,0,10,10" -o "dbtype=h2 database=h2.db" -r points
geoc-vector-create = geoc vector create -o mypoints.shp -f "the_geom=POINT EPSG:4326" -f "id=int" -f "name=string"
geoc-vector-add = geoc vector add -i mypoints.shp -v "id=1" -v "the_geom=POINT(1 1)" -v "name=House"
geoc-vector-grid = geoc vector grid -g "0,0,10,10" -x 4 -y 4
geoc-vector-to = geoc vector to -i alki_points.properties -f csv > alki_points.csv
geoc-vector-from = curl -s http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojson | geoc vector from -f geojson
geoc-vector-info = geoc vector info -i zones.shp
geoc-vector-defaultstyle = geoc vector defaultstyle zones.shp
geoc-vector-uniquevaluesstyle = geoc vector uniquevaluesstyle -i states.shp -f STATE_ABBR -c "Greens"
geoc-vector-gradientstyle = geoc vector gradientstyle -i states.shp -f SAMP_POP -n 6 -c greens
geoc-vector-addfields = geoc vector addfields -i states.shp -o states_xy.shp -f x=double -f y=double
geoc-vector-removefields = geoc vector removefields -i states.shp -o states_temp.shp -f description -f name -f boundedBy
geoc-vector-addidfield = geoc vector addidfield -i states.shp -o states_id.shp -f ID -s 1
geoc-vector-addareafield = geoc vector addareafield -i states.shp -o states_area.shp -f area
geoc-vector-addlengthfield = geoc vector addlengthfield -i roads.shp -o roads_len.shp -f LENGTH
geoc-vector-addxyfields = geoc vector addxyfields -i points.shp -o points_xy.shp -x X_COL -y Y_COL
geoc-vector-splitbyfield = geoc vector splitbyfield -i states.shp -o state_regions -f SUB_REGION
geoc-vector-splitbylayer = geoc vector splitbylayer -i states.shp -s states_grid.shp -o statesgrid -f col_row
geoc-vector-dissolvebyfield = geoc vector dissolvebyfield -i states.shp -o states_subregions.shp -f SUB_REGION
geoc-vector-dissolveintersecting = geoc vector dissolveintersecting -i polys -o polys_dissolved -d ID -c COUNT
geoc-vector-append = geoc vector append -i points.shp -k locations.shp
geoc-vector-merge = geoc vector merge -i states_SUB_REGION_Pacific.shp -k states_SUB_REGION_Mtn.shp -o states_west.shp
geoc-vector-clip = geoc vector clip -i states.shp -k area_of_interest.shp -o states_clipped.shp
geoc-vector-union = geoc vector union -i states.shp -k clip_layer.shp -o states_union.shp
geoc-vector-intersection = geoc vector intersection -i states.shp -k clip_layer.shp -o states_intersection.shp
geoc-vector-erase = geoc vector erase -i states.shp -k clip_layer.shp -o states_erase.shp
geoc-vector-identity = geoc vector identity -i states.shp -k clip_layer.shp -o states_identity.shp
geoc-vector-update = geoc vector update -i states.shp -k clip_layer.shp -o states_update.shp
geoc-vector-symdifference = geoc vector symdifference -i states.shp -k clip_layer.shp -o states_symdifference.shp
geoc-vector-validity = cat invalid.csv | geoc vector validity
geoc-vector-single2multiple = cat points.csv | geoc vector single2multiple -o multi.properties
geoc-vector-multiple2single = geoc vector multiple2single -i multi.properties
geoc-vector-compareschemas = geoc vector compareschemas -i states.shp -k states_xy.shp
geoc-vector-transform = geoc vector transform -i point.properties -i points_transformed.shp -d "the_geom=buffer(the_geom,10)" -d "name=strToUpperCase(name)" -d "distance=distance * 10"
geoc-vector-pointstacker = geoc vector poinstacker -i earthquakes.shp -o stacked_quakes.shp -c 5 -w 800 -h 600
geoc-vector-raster = geoc vector raster -i states.shp -o states.tif -d population -s 600,600
geoc-vector-heatmap = geoc vector heatmap -i earthquakes.properties -o heatmap.tif -r 50 -w 800 -h 800
geoc-vector-barnessurface = geoc vector barnessurface -i point_grid.properties -o barnes.tif -s 1 -v value -m 1 -w 800 -h 800
geoc-vector-raster-values = geoc vector raster values -i points.shp -s raster.tif -o points_values.shp
geoc-vector-subset = geoc vector subset -i earthquakes.shp -s "date ASC" -s "title ASC" -t 5 -m 10 -o ten_earthquakes.shp
geoc-vector-sort = cat states.csv | geoc vector sort -s "STATE_NAME ASC"
geoc-vector-page = cat states.csv | geoc vector page -t 0 -m 2
geoc-vector-translate = geoc vector translate -i points.properties -i points_transolate.shp -x 5 -y 10
geoc-vector-uniquevalues = $ cat states.csv | geoc vector uniquevalues -f SUB_REGION
geoc-vector-shear = geoc vector shear -i points.properties -o points_sheared.shp -x 5 -y 10
geoc-vector-rotate = geoc vector rotate -i polys.properties -o rotated_polys.shp -t 0.785 -x "getX(centroid(geom))" -y "getY(centroid(geom))"
geoc-vector-scale = geoc vector scale -i polys.properties -o scaled_polys.shp -x 5 -y 5 -c "getX(centroid(geom))" -d "getY(centroid(geom))"
geoc-vector-reflect = geoc vector reflect -i polys.properties -o reflected_polys.shp -x 5 -y 5
geoc-vector-smooth = geoc vector smooth -i jagged.shp -o smooth.shp -f 0.25
geoc-vector-arc = geoc vector arc -i states.shp -o states_arc.shp -p 100 -s 45 -e 90
geoc-vector-arcpolygon = geoc vector arcpolygon -i states.shp -o states_arcpoly.shp -p 100 -s 45 -e 90
geoc-vector-ellipse = geoc vector ellipse -i states.shp -o states_ellipse.shp -g "centroid(geom)" -w 10000 -h 20000
geoc-vector-rectangle = geoc vector rectangle -i states.shp -o states_rects.shp -g "centroid(geom)" -w 10000 -h 20000
geoc-vector-sinestar = geoc vector sinestar -i states.shp -o states_sinestar.shp -n 10 -e 0.75 -p 100
geoc-vector-supercircle = geoc vector supercircle -i polys.properties -o supercircles.shp -p 40 -e 0.4
geoc-vector-squircle = geoc vector squircle -i polys.properties -o squircles.shp -p 40
geoc-vector-database-select = geoc vector database select -w h2.db -l centroids -o centroids.properties -s "SELECT ST_CENTROID(\"the_geom\") as \"the_geom\", \"id\" FROM \"polygons\"" -g the_geom|Point
geoc-vector-database-sql = geoc vector database sql -w h2.db -s "insert into "points" ("id", "the_geom", "name") values (1, ST_GeomFromText('POINT(1 1)', 4326), 'point 1')"
geoc-vector-database-index-create = geoc vector database index create -w points.db -i geom_index -l points50 -f the_geom
geoc-vector-database-index-list = geoc vector database index list -w points.db -l points50 -p
geoc-vector-database-index-delete = geoc vector database index delete -w points.db -l points50 -i geom_index
geoc-vector-database-remove = geoc vector database remove -w points.db -l points50
geoc-vector-snap-points2lines = geoc vector snap points2lines -i points.shp -k lines.shp -o snapped.shp -d 2
geoc-vector-points2lines = geoc vector points2lines -i points.shp -o lines.shp -s id -g group
geoc-vector-points2polygons = geoc vector points2polygons -i points.shp -o polygons.shp -s id -g group
geoc-raster-info = geoc raster info -i raster.tif
geoc-raster-draw = geoc raster draw -i raster.tif -f map.png
geoc-raster-crop = geoc raster crop -i raster.tif -b "-120,-40,120,40" -o raster_croped.tif
geoc-raster-crop-with-geometry = geoc raster crop with geometry -i alki.gif -o alki_cropped.tif -g "`geom buffer -g \"POINT (1166476.232632274 823276.6023305996)\" -d 50`"
geoc-raster-crop-with-layer = geoc raster crop with layer -i alki.tif -o alki_cropped.tif -w poly.shp
geoc-raster-get-value = geoc raster get value -i alki.tif -x 5 -y 5 -t pixel
geoc-raster-scale = geoc raster scale -i raster.tif -x 2 -y 3 -o raster_scaled.tif
geoc-raster-project = geoc raster project -i raster.tif -o raster_4326.tif -t EPSG:4326
geoc-raster-reclassify = geoc raster reclassify -i raster.tif -o raster_reclass.tif -r 49-100=1 -r 100-256=255
geoc-raster-resample = geoc raster resample -i alki.tif -s "200,400" -o alki_resized.tif
geoc-raster-invert = geoc raster invert -i raster.tif -o raster_inv.tif
geoc-raster-stylize = geoc raster stylize -i raster.tif -o raster_stylized.tif -s raster_colormap.sld
geoc-raster-add-constant = geoc raster add constant -i raster.tif -v 100 -o raster_add_100.tif
geoc-raster-add = geoc raster add -i raster1.acs -p "EPSG:4326" -k raster2.acs -j "EPSG:4326" -o raster_add.tif
geoc-raster-subtract-constant = geoc raster subtract constant -i raster.tif -v 50 -o raster_minus_50.tif
geoc-raster-subtract = geoc raster substract -i raster1.acs -p "EPSG:4326" -k raster2.acs -j "EPSG:4326" -o raster_subtracted.tif
geoc-raster-multiply-constant = geoc raster multiply constant -i raster.tif -o raster_mul_2.tif -v 2
geoc-raster-multiply = geoc raster multiply -i raster1.acs -p "EPSG:4326" -k raster2.acs -j "EPSG:4326" -o raster_multiplied.tif
geoc-raster-divide-constant = geoc raster divide constant -i raster.tif -o raster_div_2.tif -v 2
geoc-raster-divide = geoc raster divide -i raster1.acs -p "EPSG:4326" -k raster2.acs -j "EPSG:4326" -o raster_divided.tif
geoc-raster-envelope = geoc raster envelope -i raster.tif
geoc-raster-point = geoc raster point -i raster.tif -o points.shp
geoc-raster-polygon = geoc raster polygon -i raster.tif -o polygons.shp
geoc-raster-contour = geoc raster contour -i raster.tif -o contours.shp -l 10 -s -m
geoc-raster-to = geoc raster to -i raster.tif -o raster.png -f worldimage
geoc-raster-mapalgebra = geoc raster mapalgebra -s "dest = r1 * r2" -r "r1=raster1.acs" -r "r2=raster2.acs" -o raster_add.tif -p "EPSG:4326"
geoc-raster-worldfile = geoc raster worldfile -b 0,0,10,10 -s 5,5 -f test.pgw
geoc-raster-style-default = geoc raster style default
geoc-raster-style-shadedrelief = geoc raster style shadedrelief -r 65 -b -o 0.85
geoc-raster-style-channel-selection = geoc raster style channel selection -r "red,histogram,0.5" -g "green,normalize,0.25" -b "green,histogram,0.33"
geoc-raster-style-constrast-enhancement = geoc raster style contrast enhancement -m normalize -g 0.25s
geoc-raster-colormap = geoc raster style colormap -v "10=red" -v "50=blue" -v "100=wheat" -v "250=white" -t ramp -e
geoc-raster-animatedgif = geoc raster animatedgif -f image1.gif -f image2.gif -f image2.gif -o animated.gif -d 450 -r
geoc-vector-join-attribute = geoc vector join attribute -i polygons.shp -s table.csv -o polygons_table.shp -y id -j key -n name -n descriptions
geoc-vector-join-spatial = geoc vector join spatial -i points.shp -k polygons.shp -o points_joined.shp -f name -f description -f homepage
geoc-vector-display = geoc vector display -i points.shp -w 400 -h 400
geoc-raster-display = geoc raster display -i raster.tif -w 400 -h 400
geoc-raster-extractfootprint = geoc raster extractfootprint -i raster.tif -o footprint.shp
geoc-raster-abs = geoc raster abs -i raster.tif -o raster_abs.tif
geoc-raster-log = geoc raster log -i raster.tif -o raster_log.tif
geoc-raster-exp = geoc raster exp -i raster.tif -o raster_exp.tif
geoc-raster-normalize = geoc raster normalize -i raster.tif -o raster_normalized.tif
geoc-raster-convolve = geoc raster convolve -i raster.tif -o raster_convolved.tif -w 2 -h 3
geoc-tile-generate = geoc tile generate -l earthquakes.mbtiles -m layerFile -s 0 -e 2 -v false
geoc-tile-delete = geoc tile delete -l earthquakes.mbtiles -z 2
geoc-tile-stitch-raster = geoc tile stitch raster -l earthquakes.mbtiles -z 1 -o earthquakes.tif
geoc-tile-stitch-vector = geoc tile stitch vector -l "type=vectortiles format=mvt file=earthquakes/mvt name=earthquakes" -z 1 -o earthquakes.gpkg
geoc-tile-pyramid = geoc tile pyramid -l src/test/resources/earthquakes.mbtiles
geoc-tile-vector-grid = geoc tile vector grid -l earthquakes.mbtiles -z 1 -o grid.shp
geoc-map-cube = geoc map cube -m map.groovy -f mapcube.png
geoc-geometry-geohash-encode = geoc geometry geohash encode -i "POINT (45 78)"
geoc-geometry-geohash-decode = geoc geometry geohash decode -i uf8vk6wjr
geoc-geometry-geohash-neighbors = geoc geometry geohash neighbors -i uf8vk6wjr
geoc-geometry-geohash-bounds = geoc geometry geohash bounds -b "120, 30, 120.0001, 30.0001"
geoc-geometry-offset = geoc geometry offset -i "LINESTRING (10 0, 10 10)" -d 5 -s 8
geoc-filter-cql2xml = geoc filter cql2xml -c STATE_ABBR=WA
geoc-vector-dump-shapefiles = cat pointsAndPolygons.csv | geoc vector dump shapfiles -o shapefiles
geoc-vector-graticule-oval = geoc vector graticule oval -l 10 -g -180,-90,180,90
geoc-vector-graticule-square = geoc vector graticule square -l 10 -g -180,-90,180,90
geoc-vector-graticule-rectangle = geoc vector graticule rectangle -w 10 -h 15 -g -180,-90,180,90
geoc-vector-graticule-hexagon = geoc vector graticule hexagon -l 10 -g -180,-90,180,90
geoc-vector-graticule-line = geoc vector graticule line -g -180,-90,180,90 -l "vertical,2,10" -l "vertical,1,2" -l "horizontal,2,10" -l "horizontal,1,2"
geoc-vector-remove-layer = geoc vector remove layer -i layers.gpkg -l points
geoc-map-draw = geoc map draw -l "layertype=layer dbtype=geopkg database=data/countries.gpkg layername=countries style=data/countries.sld" -l "layertype=layer file=data/points.csv layername=points style=data/points.sld"
geoc-style-ysld2sld = geoc style ysld2sld -i countries.yml -o countries.sld
geoc-style-sld2ysld = geoc style sld2ysld -i countries.sld -o countries.yml
geoc-style-create = geoc style create -s fill=white -s stroke=black -s stroke-width=0.1 -t ysld
geoc-tile-get-bounds = geoc tile get bounds -p mercator -z 10 -x 245 -y 310
geoc-tile-list-tiles = geoc tile list tiles -p mercator -z 10 -b "-13731759.2574,5981350.3374,-13512843.6084,6095547.2576"
geoc-raster-size = geoc raster size -i raster.tif
geoc-raster-projection = geoc raster projection -i raster.tif -t epsg
geoc-style-uniquevaluesfromtext = geoc style uniquevaluesfromtext -f unit -g Polygon -i units.txt -o units.sld
geoc-vector-intersects = geoc vector intersects -i points.shp -k polygons.shp -o pointsIntersectingPolygons.shp
geoc-vector-contains = geoc vector contains -i points.shp -k polygons.shp -o pointsInPolygons.shp
geoc-vector-distancewithin = geoc vector distancewithin -i points.shp -k polygons.shp -o pointsInPolygons.shp -d 4.56
geoc-raster-shadedrelief = geoc raster shadedrelief -i elev.tif -o shadedrelief -s 1.0 -a 45.0 -m 15.0
geoc-version = geoc version
geoc-raster-mosaic =  geoc raster mosaic -r raster1.tif -r raster2.tif -o raster.tif
geoc-vector-pointsalongline = geoc vector pointsalongline -i rivers.shp -o sample_locations.shp -d 10.0
